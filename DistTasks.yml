version: "3"

tasks:
  all:
    desc: Build for distribution for all platforms
    cmds:
      - task: Windows_32bit
      - task: Windows_64bit
      - task: Linux_32bit
      - task: Linux_64bit
      - task: macOS_64bit

  Windows_32bit:
    desc: Builds Windows 32 bit binaries
    dir: "{{ .DIST_DIR }}"
    cmds:
      - |
        docker run -v {{ .TOOL_DIR }}:/home/build \
        -v {{ .DIST_DIR }}:/dist \
        -w /home/build \
        -e CGO_ENABLED=1 \
        {{ .CONTAINER }}:{{ .CONTAINER_TAG }} \
        --build-cmd "{{ .BUILD_COMMAND }}" \
        -p "{{ .BUILD_PLATFORM }}"
    vars:
      PLATFORM_DIR: "windows32"
      BUILD_COMMAND: "go build -o /dist/{{ .PLATFORM_DIR }}/bhy.exe"
      BUILD_PLATFORM: "windows/386"
      PACKAGE_PLATFORM: "Windows_32bit"
      CONTAINER_TAG: "{{ .GO_VERSION }}-main"

  Windows_64bit:
    desc: Builds Windows 64 bit binaries
    dir: "{{ .DIST_DIR }}"
    cmds:
      - |
        docker run -v {{ .TOOL_DIR }}:/home/build \
        -v {{ .DIST_DIR }}:/dist \
        -w /home/build \
        -e CGO_ENABLED=1 \
        {{ .CONTAINER }}:{{ .CONTAINER_TAG }} \
        --build-cmd "{{ .BUILD_COMMAND }}" \
        -p "{{ .BUILD_PLATFORM }}"
    vars:
      PLATFORM_DIR: "windows64"
      BUILD_COMMAND: "go build -o /dist/{{ .PLATFORM_DIR }}/bhy.exe"
      BUILD_PLATFORM: "windows/amd64"
      PACKAGE_PLATFORM: "Windows_64bit"
      CONTAINER_TAG: "{{ .GO_VERSION }}-main"

  Linux_32bit:
    desc: Builds Linux 32 bit binaries
    dir: "{{ .DIST_DIR }}"
    cmds:
      - |
        docker run -v {{ .TOOL_DIR }}:/home/build \
        -v {{ .DIST_DIR }}:/dist \
        -w /home/build \
        -e CGO_ENABLED=1 \
        {{ .CONTAINER }}:{{ .CONTAINER_TAG }} \
        --build-cmd "{{ .BUILD_COMMAND }}" \
        -p "{{ .BUILD_PLATFORM }}"
    vars:
      PLATFORM_DIR: "linux32"
      BUILD_COMMAND: "go build -o /dist/{{ .PLATFORM_DIR }}/bhy.exe"
      BUILD_PLATFORM: "linux/386"
      PACKAGE_PLATFORM: "Linux_32bit"
      CONTAINER_TAG: "{{ .GO_VERSION }}-main"

  Linux_64bit:
    desc: Builds Linux 64 bit binaries
    dir: "{{ .DIST_DIR }}"
    cmds:
      - |
        docker run -v {{ .TOOL_DIR }}:/home/build \
        -v {{ .DIST_DIR }}:/dist \
        -w /home/build \
        -e CGO_ENABLED=1 \
        {{ .CONTAINER }}:{{ .CONTAINER_TAG }} \
        --build-cmd "{{ .BUILD_COMMAND }}" \
        -p "{{ .BUILD_PLATFORM }}"
    vars:
      PLATFORM_DIR: "linux64"
      BUILD_COMMAND: "go build -o /dist/{{ .PLATFORM_DIR }}/bhy.exe"
      BUILD_PLATFORM: "linux/amd64"
      PACKAGE_PLATFORM: "Linux_64bit"
      CONTAINER_TAG: "{{ .GO_VERSION }}-main"

  macOS_64bit:
    desc: Builds Mac OS X 64 bit binaries
    dir: "{{ .DIST_DIR }}"
    cmds:
      - |
        docker run -v {{ .TOOL_DIR }}:/home/build \
        -v {{ .DIST_DIR }}:/dist \
        -w /home/build \
        -e CGO_ENABLED=1 \
        {{ .CONTAINER }}:{{ .CONTAINER_TAG }} \
        --build-cmd "{{ .BUILD_COMMAND }}" \
        -p "{{ .BUILD_PLATFORM }}"
    vars:
      PLATFORM_DIR: "macos64"
      BUILD_COMMAND: "go build -o /dist/{{ .PLATFORM_DIR }}/bhy"
      BUILD_PLATFORM: "darwin/amd64"
      PACKAGE_PLATFORM: "macOS_64bit"
      CONTAINER_TAG: "{{ .GO_VERSION }}-darwin"

vars:
  CONTAINER: "docker.elastic.co/beats-dev/golang-crossbuild"
  GO_VERSION: "1.14.15"
